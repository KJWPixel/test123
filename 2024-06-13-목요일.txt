2024-06-13-목요일
Move Controller Script부터
//manager, 비동기적으로 호출이 왔을때에만 대응
//controller, updata사용 동기적으로 호출이 오지 않더라도 타 기능을 불러서 사용하는 경우가 많음

[Header("플레이어 이동 및 점프")]
Rigidbody rigid;
CapsuleCollider2D coll;
Animator anim;
Vector3 moveDir;
float verticalVelocity = 0f;//수직으로 떨어지는 힘

[SerializeField] float jumpForce;
[SerializeField] float moveSpeed;

[SerializeField] bool isGround;//인스펙터에서 플레이어가 플랫폼타일에 착지 했는지

private void checkGround() 함수: updata문에서 확인

Raycast: 레이를 쏘아 앞에 막힌 대상이 있다면 그 결과를보냄: 한 개의 대상
RaycastAll: 레이를 쏘아 앞에 있는 대상 뒤에 있는 대상까지 List로 결과를 보냄: 여러개 대상
RaycastNonAlloc: 레이의 맞는 수를 결과로 내보냄

//float.PositiveInfinity //포지티브, 네거티브(반대방향) 무한으로 발사 

Physics2D.Raycast() //최초 위치로 부터(origin), 방향(direction)

gameobj Inspector에 Layer에 Add Layer로 레이어를 추가할 수 있음 
Layer는 Int로 구성되여 있고 4바이트 = 32비트 32가지의 수를 가질 수 있음

OnDrawGizmos()//체크의 용도

//Debug.DrawLine(); 디버그도 체크용도로 씬 카메라에 선을 그려줄 수 있음
//Gizmos.DrawSphere(); 디버그보다 더 많은 시각효과를 제공
using UnityEditor; 사용해야
Handles.Draw 기능 사용 위에보다 더 많은 기능 제공

Debug.DrawLine(transform.position, transform.position - new Vector3(0, groundCheckLength), Color.red);
groundCheckLength로 Inspector에서 길이를 육안으로 확인가능

Raycast 하나의 레이어면 NametoRayer 두개 이상이면 예시: LayerMask.GetMask ("Ground", "Wall")

velocity: 속도
